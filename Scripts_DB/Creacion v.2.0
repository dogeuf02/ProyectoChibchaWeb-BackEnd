
/* --- 1. Creación de ENUMS --- */
CREATE TYPE estado_usuario_enum AS ENUM ('ACTIVO','INACTIVO','PENDIENTE');
/*cambiar nivel_complejidad*/
CREATE TYPE nivel_complejidad_enum AS ENUM ('nivel-1', 'nivel-2', 'nivel-3');
CREATE TYPE estado_ticket_enum AS ENUM ('Abierto', 'En Progreso', 'Cerrado','Escalado');
CREATE TYPE estado_solicitud_enum AS ENUM ('Aprobada', 'Rechazada', 'En Revisión');
CREATE TYPE estado_traslado_enum AS ENUM ('Pendiente', 'Aprobado', 'Rechazado');
/* actualizado */
CREATE TYPE cargo_empleado_enum AS ENUM ('Tecnico nv 1','Tecnico nv 2','Tecnico nv 3',
'Coordinador nv 1','Coordinador nv 2','Coordinador nv 3');
CREATE TYPE rol_usuario_enum AS ENUM ('Cliente', 'Administrador', 'Empleado','Distribuidor');
CREATE TYPE estado_dominio_enum AS ENUM ('Disponible', 'En Uso', 'Reservado');
/*actualizado*/
CREATE TYPE tipo_medio_pago_enum AS ENUM ('Debito','Credito','PSE');
CREATE TYPE estado_plan_enum AS ENUM ('Activo', 'Vencido', 'Cancelado');
CREATE TYPE acciones_ticket_enum AS ENUM ('asignado','reasignado','solucionado','escalado','comentado');

/* --- 2. Tablas base sin dependencias --- */
CREATE TABLE TIPO_DOCUMENTO_EMP (
   NOMBRE_TIPO_DOC VARCHAR(20) NOT NULL,
   CONSTRAINT PK_TIPO_DOCUMENTO_EMP PRIMARY KEY (NOMBRE_TIPO_DOC)
);

CREATE TABLE REGISTRADOR (
   ID_REGISTRADOR SERIAL NOT NULL,
   NOMBRE_REGISTRADOR VARCHAR(150) NOT NULL,
   CORREO_REGISTRADOR VARCHAR(150) NOT NULL,
   CONSTRAINT PK_REGISTRADOR PRIMARY KEY (ID_REGISTRADOR)
);

CREATE TABLE ADMINISTRADOR (
   ID_ADMIN SERIAL NOT NULL,
   NOMBRE_ADMIN VARCHAR(50) NOT NULL,
   APELLIDO_ADMIN VARCHAR(50) NOT NULL,
   FECHA_NACIMIENTO_ADMIN DATE,
   CONSTRAINT PK_ADMINISTRADOR PRIMARY KEY (ID_ADMIN)
);

/*Actualizacion*/

CREATE TABLE PLAN_CLIENTE (
    ID_PLAN_CLIENTE SERIAL NOT NULL,
    NOMBRE_PLAN_CLIENTE VARCHAR(150) NOT NULL,
    NUMERO_WEBS INTEGER NOT NULL,
    NUMERO_BASE_DATOS INTEGER NOT NULL,
    ALMACENAMIENTO_NVME INTEGER NOT NULL,
    NUMERO_CUENTAS_CORREO INTEGER NOT NULL,
    CREADOR_WEB BOOLEAN NOT NULL,
    NUMERO_CERTIFICADO_SSL_HTTPS INTEGER NOT NULL,
    EMAIL_MARKETING BOOLEAN NOT NULL,
    CONSTRAINT PK_PLAN_CLIENTE PRIMARY KEY (ID_PLAN_CLIENTE)
);


CREATE TABLE EMPLEADO (
   ID_EMPLEADO SERIAL NOT NULL,
   NOMBRE_EMPLEADO VARCHAR(50) NOT NULL,
   APELLIDO_EMPLEADO VARCHAR(50) NOT NULL,
   CARGO_EMPLEADO cargo_empleado_enum NOT NULL,
   CONSTRAINT PK_EMPLEADO PRIMARY KEY (ID_EMPLEADO)
);

CREATE TABLE TLD (
   TLD VARCHAR(63) NOT NULL,
   PRECIO_TLD NUMERIC(10,2) NOT NULL,
   CONSTRAINT PK_TLD PRIMARY KEY (TLD)
);

/*ACTUALIZADA*/
CREATE TABLE CLIENTE_DIRECTO (
   ID_CLIENTE SERIAL NOT NULL,
   NOMBRE_CLIENTE VARCHAR(50) NOT NULL,
   APELLIDO_CLIENTE VARCHAR(50) NOT NULL,
   TELEFONO VARCHAR(20) NOT NULL,
   FECHA_NACIMIENTO_CLIENTE DATE NULL,
   CONSTRAINT PK_CLIENTE_DIRECTO PRIMARY KEY (ID_CLIENTE),
   CONSTRAINT CHK_FECHA_NACIMIENTO CHECK (FECHA_NACIMIENTO_CLIENTE <= CURRENT_DATE)
);


/*Creacion tabla categoria distribuidor*/
CREATE TABLE CATEGORIA_DISTRIBUIDOR (
    ID_CATEGORIA SERIAL NOT NULL,
    NOMBRE_CATEGORIA VARCHAR(100) NOT NULL,
    PRECIO_CATEGORIA NUMERIC(10,2) NOT NULL,/*pendiente*/
    CONSTRAINT PK_CATEGORIA_DISTRIBUIDOR PRIMARY KEY (ID_CATEGORIA)
);

/*ACTUALIZADA*/

CREATE TABLE DISTRIBUIDOR (
   ID_DISTRIBUIDOR SERIAL,
   NOMBRE_TIPO_DOC_ID VARCHAR(20) NOT NULL,
   NUMERO_DOC_EMPRESA VARCHAR(20) NOT NULL,
   NOMBRE_EMPRESA VARCHAR(255) NOT NULL,
   DIRECCION_EMPRESA VARCHAR(255) NOT NULL,
   CATEGORIA_ID INTEGER,
   CONSTRAINT PK_DISTRIBUIDOR PRIMARY KEY (ID_DISTRIBUIDOR),
   CONSTRAINT FK_DISTRIBUIDOR_TDOC FOREIGN KEY (NOMBRE_TIPO_DOC_ID)
       REFERENCES TIPO_DOCUMENTO_EMP(NOMBRE_TIPO_DOC),
   CONSTRAINT FK_DISTRIBUIDOR_CATEGORIA FOREIGN KEY (CATEGORIA_ID)
       REFERENCES CATEGORIA_DISTRIBUIDOR(ID_CATEGORIA)
);


CREATE TABLE USUARIO (
   ID_USUARIO SERIAL PRIMARY KEY,
   CLIENTE_ID INT NULL,
   ADMIN_ID INT NULL,
   EMPLEADO_ID INT NULL,
   DISTRIBUIDOR_ID INT NULL,
   CORREO_USUARIO VARCHAR(150) UNIQUE NOT NULL,
   CONTRASENA VARCHAR(150) NOT NULL,
   ROL rol_usuario_enum NOT NULL,
   ESTADO estado_usuario_enum NOT NULL,
   CONSTRAINT FK_USUARIO_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE_DIRECTO(ID_CLIENTE),
   CONSTRAINT FK_USUARIO_ADMIN FOREIGN KEY (ADMIN_ID) REFERENCES ADMINISTRADOR(ID_ADMIN),
   CONSTRAINT FK_USUARIO_EMPLEADO FOREIGN KEY (EMPLEADO_ID) REFERENCES EMPLEADO(ID_EMPLEADO),
   CONSTRAINT FK_USUARIO_DISTRIBUIDOR FOREIGN KEY (DISTRIBUIDOR_ID) REFERENCES DISTRIBUIDOR(ID_DISTRIBUIDOR)
);

/*ACTUALIZADA*/
CREATE TABLE TICKET (
   ID_TICKET VARCHAR(100) NOT NULL,
   DISTRIBUIDOR_ID INT NULL,
   CLIENTE_ID INT NULL,
   ASUNTO VARCHAR(100) NOT NULL,
   DESCRIPCION TEXT NULL,
   NIVEL_COMPLEJIDAD nivel_complejidad_enum NOT NULL DEFAULT 'nivel-1',
   ESTADO estado_ticket_enum NOT NULL DEFAULT 'Abierto',
   FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   FECHA_CIERRE TIMESTAMP NULL,

   CONSTRAINT PK_TICKET PRIMARY KEY (ID_TICKET),
   CONSTRAINT FK_TICKET_DISTRIBUIDOR FOREIGN KEY (DISTRIBUIDOR_ID) REFERENCES DISTRIBUIDOR(ID_DISTRIBUIDOR),
   CONSTRAINT FK_TICKET_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE_DIRECTO(ID_CLIENTE),
   CONSTRAINT CHK_SOLICITANTE_TICKET CHECK (
      (CLIENTE_ID IS NOT NULL AND DISTRIBUIDOR_ID IS NULL) OR
      (CLIENTE_ID IS NULL AND DISTRIBUIDOR_ID IS NOT NULL)
   )
);


/*Actualizado*/
CREATE TABLE HISTORIAL_TICKET (
    ID_HISTORIAL_TICKET SERIAL PRIMARY KEY,
    TICKET_ID VARCHAR(100) NOT NULL,
    EMPLEADO_REALIZADOR_ID INT,
    EMPLEADO_RECEPTOR_ID INT,
    ACCION_TICKET acciones_ticket_enum NOT NULL,
    COMENTARIOS TEXT,
    FECHA_ACCION TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_HTU_TICKET FOREIGN KEY (TICKET_ID) REFERENCES TICKET(ID_TICKET),
    CONSTRAINT FK_HTU_REALIZADOR FOREIGN KEY (EMPLEADO_REALIZADOR_ID) REFERENCES EMPLEADO(ID_EMPLEADO),
    CONSTRAINT FK_HTU_RECEPTOR FOREIGN KEY (EMPLEADO_RECEPTOR_ID) REFERENCES EMPLEADO(ID_EMPLEADO)
);


CREATE TABLE DOMINIO(
  ID_DOMINIO SERIAL NOT NULL,
  TLD_ID VARCHAR(63) NOT NULL,
  NOMBRE_DOMINIO VARCHAR(263) NOT NULL,
  PRECIO_DOMINIO NUMERIC(10,2) NULL,
  ESTADO estado_dominio_enum,
  CONSTRAINT PK_DOMINIO PRIMARY KEY (ID_DOMINIO),
  CONSTRAINT FK_DOMINIO_TLD FOREIGN KEY (TLD_ID)REFERENCES TLD(TLD)
);

/* --- 4. Tabla de solicitudes de dominio ACTUALIZADA --- */
CREATE TABLE SOLICITUD_DOMINIO (
   ID_SOLICITUD SERIAL NOT NULL,
   CLIENTE_ID INT NULL,
   DISTRIBUIDOR_ID INT NULL,
   DOMINIO_ID INT NOT NULL,
   ADMIN_ID INT NULL,
   ESTADO_SOLICITUD estado_solicitud_enum NOT NULL DEFAULT 'En Revisión',
   FECHA_SOLICITUD DATE NOT NULL,
   FECHA_APROBACION DATE NULL,

   CONSTRAINT PK_SOLICITUD_DOMINIO PRIMARY KEY(ID_SOLICITUD),
   CONSTRAINT FK_SOLICITUD_DOMINIO_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE_DIRECTO(ID_CLIENTE),
   CONSTRAINT FK_SOLICITUD_DOMINIO_DISTRIBUIDOR FOREIGN KEY (DISTRIBUIDOR_ID) REFERENCES DISTRIBUIDOR(ID_DISTRIBUIDOR),
   CONSTRAINT FK_SOLICITUD_DOMINIO_DOMINIO FOREIGN KEY (DOMINIO_ID) REFERENCES DOMINIO(ID_DOMINIO),
   CONSTRAINT FK_SOLICITUD_DOMINIO_ADMIN FOREIGN KEY (ADMIN_ID) REFERENCES ADMINISTRADOR(ID_ADMIN),
   CONSTRAINT CHK_UNO_SOLICITANTE CHECK (
       (CLIENTE_ID IS NOT NULL AND DISTRIBUIDOR_ID IS NULL) OR
       (CLIENTE_ID IS NULL AND DISTRIBUIDOR_ID IS NOT NULL)
   )
);


CREATE TABLE BANCO (
   ID_BANCO SERIAL PRIMARY KEY,
   NOMBRE_BANCO VARCHAR(100) NOT NULL
);

/*ACTUALIZADA*/

CREATE TABLE MEDIO_PAGO (
   ID_MEDIO_PAGO SERIAL PRIMARY KEY,
   CLIENTE_ID INT NULL,
   TIPO_MEDIO_PAGO tipo_medio_pago_enum NOT NULL,
   DISTRIBUIDOR_ID INT NULL,
   NOMBRE_TITULAR VARCHAR(100) NOT NULL,
   NUMERO_TARJETA_CUENTA VARCHAR(20),
   BANCO_ID INT,
   CORREO_PSE VARCHAR(100),
   FECHA_REGISTRO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

   CONSTRAINT FK_MP_CLIENTE FOREIGN KEY (CLIENTE_ID)
       REFERENCES CLIENTE_DIRECTO(ID_CLIENTE) ON DELETE SET NULL,

   CONSTRAINT FK_MP_DISTRIBUIDOR FOREIGN KEY (DISTRIBUIDOR_ID)
       REFERENCES DISTRIBUIDOR(ID_DISTRIBUIDOR) ON DELETE SET NULL,

   CONSTRAINT FK_MP_BANCO FOREIGN KEY (BANCO_ID)
       REFERENCES BANCO(ID_BANCO) ON DELETE SET NULL,

   CONSTRAINT CHK_DUENO_UNICO CHECK (
       (CLIENTE_ID IS NOT NULL AND DISTRIBUIDOR_ID IS NULL) OR
       (CLIENTE_ID IS NULL AND DISTRIBUIDOR_ID IS NOT NULL)
   )
);


/*creacion tabla plan pago*/
CREATE TABLE PLAN_PAGO (
    ID_PLAN_PAGO SERIAL NOT NULL,
    INTERVALO_PAGO VARCHAR(50) NOT NULL,
    CONSTRAINT PK_PLAN_PAGO PRIMARY KEY (ID_PLAN_PAGO)
);

CREATE TYPE estado_pago_enum AS ENUM ('Pagado', 'Pendiente', 'Fallido');
CREATE TYPE estado_comision_enum AS ENUM ('Pendiente', 'Pagada', 'Anulada');

CREATE TABLE PLAN_ADQUIRIDO (
    ID_PLAN_ADQUIRIDO SERIAL NOT NULL,
    CLIENTE_ID INTEGER NOT NULL,
    PLAN_CLIENTE_ID INTEGER NOT NULL,
    PLAN_PAGO_ID INTEGER NOT NULL,
    ESTADO_PLAN estado_plan_enum NOT NULL DEFAULT 'Activo',
    FECHA_COMPRA DATE NOT NULL,
    FECHA_EXPIRACION DATE NOT NULL,
    FECHA_ACTUALIZACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRECIO_PLAN_ADQUIRIDO NUMERIC(10,2),

    CONSTRAINT PK_PLAN_ADQUIRIDO PRIMARY KEY (ID_PLAN_ADQUIRIDO),
    CONSTRAINT FK_PLAN_ADQUIRIDO_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE_DIRECTO(ID_CLIENTE),
    CONSTRAINT FK_PLAN_ADQUIRIDO_PLAN FOREIGN KEY (PLAN_CLIENTE_ID) REFERENCES PLAN_CLIENTE(ID_PLAN_CLIENTE),
    CONSTRAINT FK_PLAN_ADQUIRIDO_PAGO FOREIGN KEY (PLAN_PAGO_ID) REFERENCES PLAN_PAGO(ID_PLAN_PAGO)
);


CREATE TABLE FACTURA (
    ID_FACTURA SERIAL PRIMARY KEY,
    PLAN_ADQUIRIDO_ID INTEGER NOT NULL,
    MEDIO_PAGO_ID INTEGER NOT NULL,
    FECHA_FACTURACION DATE NOT NULL DEFAULT CURRENT_DATE,
    TOTAL NUMERIC(10,2) NOT NULL,
    ESTADO_PAGO estado_pago_enum NOT NULL DEFAULT 'Pendiente',

    CONSTRAINT FK_FACTURA_PLAN_ADQUIRIDO FOREIGN KEY (PLAN_ADQUIRIDO_ID)
        REFERENCES PLAN_ADQUIRIDO(ID_PLAN_ADQUIRIDO),
    CONSTRAINT FK_FACTURA_MEDIO_PAGO FOREIGN KEY (MEDIO_PAGO_ID)
        REFERENCES MEDIO_PAGO(ID_MEDIO_PAGO)
);

CREATE TABLE COMISION (
    ID_COMISION SERIAL PRIMARY KEY,
    DISTRIBUIDOR_ID INTEGER NOT NULL,
    MEDIO_PAGO_ID INTEGER NOT NULL,
    VALOR_COMISION NUMERIC(10,2) NOT NULL,
    FECHA_PAGO DATE NOT NULL,
    ESTADO_COMISION estado_comision_enum NOT NULL DEFAULT 'Pendiente',

    CONSTRAINT FK_COMISION_DISTRIBUIDOR FOREIGN KEY (DISTRIBUIDOR_ID)
        REFERENCES DISTRIBUIDOR(ID_DISTRIBUIDOR),

    CONSTRAINT FK_COMISION_MEDIO_PAGO FOREIGN KEY (MEDIO_PAGO_ID)
        REFERENCES MEDIO_PAGO(ID_MEDIO_PAGO)
);

CREATE TABLE token_verificacion (
    id SERIAL PRIMARY KEY,
    token VARCHAR(255) NOT NULL UNIQUE,
    id_usuario INT NOT NULL,
    fecha_expiracion TIMESTAMP NOT NULL,
    estado BOOLEAN NOT NULL DEFAULT FALSE,
    creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    actualizado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_token_verif_usuario FOREIGN KEY (id_usuario)
        REFERENCES USUARIO(ID_USUARIO) ON DELETE CASCADE
);

CREATE TABLE PERTENECE_DOMINIO (
    ID_PERTENECE SERIAL PRIMARY KEY,
    CLIENTE_ID INTEGER NULL,
    DISTRIBUIDOR_ID INTEGER NULL,
    DOMINIO_ID INTEGER NOT NULL,

    CONSTRAINT FK_PERTENECE_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE_DIRECTO(ID_CLIENTE),
    CONSTRAINT FK_PERTENECE_DISTRIBUIDOR FOREIGN KEY (DISTRIBUIDOR_ID) REFERENCES DISTRIBUIDOR(ID_DISTRIBUIDOR),
    CONSTRAINT FK_PERTENECE_DOMINIO FOREIGN KEY (DOMINIO_ID) REFERENCES DOMINIO(ID_DOMINIO),
    CONSTRAINT CHK_UNO_SOLO_TIPO CHECK (
        (CLIENTE_ID IS NOT NULL AND DISTRIBUIDOR_ID IS NULL) OR
        (CLIENTE_ID IS NULL AND DISTRIBUIDOR_ID IS NOT NULL)
    )
);


CREATE TABLE SOLICITUD_TRASLADO (
    ID_SOLICITUD_TRASLADO SERIAL PRIMARY KEY,
    PERTENECE_ID INT NOT NULL,
    CLIENTE_ID INT NULL,
    DISTRIBUIDOR_ID INT NULL,
    ADMIN_ID INT NULL,
    FECHA_SOLICITUD_TRASLADO DATE NOT NULL DEFAULT CURRENT_DATE,
    FECHA_APROBACION_TRASLADO DATE NULL,
    ESTADO_TRASLADO estado_traslado_enum NOT NULL DEFAULT 'Pendiente',

    CONSTRAINT FK_SOL_TRASLADO_PERTENECE FOREIGN KEY (PERTENECE_ID) REFERENCES PERTENECE_DOMINIO(ID_PERTENECE),
    CONSTRAINT FK_SOL_TRASLADO_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE_DIRECTO(ID_CLIENTE),
    CONSTRAINT FK_SOL_TRASLADO_DISTRIBUIDOR FOREIGN KEY (DISTRIBUIDOR_ID) REFERENCES DISTRIBUIDOR(ID_DISTRIBUIDOR),
    CONSTRAINT FK_SOL_TRASLADO_ADMIN FOREIGN KEY (ADMIN_ID) REFERENCES ADMINISTRADOR(ID_ADMIN),
    CONSTRAINT CHK_SOLICITANTE_TRASLADO CHECK (
        (CLIENTE_ID IS NOT NULL AND DISTRIBUIDOR_ID IS NULL) OR
        (CLIENTE_ID IS NULL AND DISTRIBUIDOR_ID IS NOT NULL)
    )
);

CREATE TABLE PRECIO_PLAN (
  PLAN_CLIENTE_ID INT NOT NULL,
  PLAN_PAGO_ID INT NOT NULL,
  ID BIGINT NOT NULL,
  PRECIO NUMERIC(10,2) NOT NULL,

  CONSTRAINT PK_PRECIO_PLAN PRIMARY KEY (ID),
  CONSTRAINT FK_PRECIO_PLAN_CLIENTE FOREIGN KEY (PLAN_CLIENTE_ID) REFERENCES PLAN_CLIENTE(ID_PLAN_CLIENTE),
  CONSTRAINT FK_PRECIO_PLAN_PAGO FOREIGN KEY (PLAN_PAGO_ID) REFERENCES PLAN_PAGO(ID_PLAN_PAGO)
);




