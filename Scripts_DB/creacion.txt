/* --- 1. Creación de ENUMS --- */
CREATE TYPE estado_usuario AS ENUM ('ACTIVO','INACTIVO','PENDIENTE');
CREATE TYPE prioridad_enum AS ENUM ('Baja', 'Media', 'Alta');
CREATE TYPE estado_ticket_enum AS ENUM ('Abierto', 'En Progreso', 'Cerrado', 'Escalado');
CREATE TYPE estado_solicitud_enum AS ENUM ('Aprobada', 'Rechazada', 'En Revisión');
CREATE TYPE cargo_empleado_enum AS ENUM ('Soporte', 'Coordinador');
CREATE TYPE rol_usuario_enum AS ENUM ('Cliente', 'Administrador', 'Empleado', 'Registrador', 'Distribuidor');
CREATE TYPE estado_dominio_enum AS ENUM ('Disponible', 'En Uso', 'Reservado');

/* --- 2. Tablas base sin dependencias --- */
CREATE TABLE TIPO_DOCUMENTO_EMP (
   NOMBRE_TIPO_DOC VARCHAR(20) NOT NULL,
   CONSTRAINT PK_TIPO_DOCUMENTO_EMP PRIMARY KEY (NOMBRE_TIPO_DOC)
);

CREATE TABLE REGISTRADOR (
   ID_REGISTRADOR SERIAL NOT NULL,
   NOMBRE_REGISTRADOR VARCHAR(150) NOT NULL,
   CONSTRAINT PK_REGISTRADOR PRIMARY KEY (ID_REGISTRADOR)
);

CREATE TABLE ADMINISTRADOR (
   ID_ADMIN SERIAL NOT NULL,
   NOMBRE_ADMIN VARCHAR(50) NOT NULL,
   APELLIDO_ADMIN VARCHAR(50) NOT NULL,
   FECHA_NACIMIENTO_ADMIN DATE NOT NULL,
   CONSTRAINT PK_ADMINISTRADOR PRIMARY KEY (ID_ADMIN)
);

CREATE TABLE PLAN (
   ID_PLAN SERIAL NOT NULL,
   NOMBRE_PLAN VARCHAR(100) NOT NULL,
   PRECIO NUMERIC(12,2) NOT NULL DEFAULT 0,
   CONSTRAINT PK_PLAN PRIMARY KEY (ID_PLAN)
);

CREATE TABLE EMPLEADO (
   ID_EMPLEADO SERIAL NOT NULL,
   NOMBRE_EMPLEADO VARCHAR(50) NOT NULL,
   APELLIDO_EMPLEADO VARCHAR(50) NOT NULL,
   CARGO_EMPLEADO cargo_empleado_enum NOT NULL,
   CONSTRAINT PK_EMPLEADO PRIMARY KEY (ID_EMPLEADO)
);

CREATE TABLE TLD (
   TLD VARCHAR(63) NOT NULL,
   CONSTRAINT PK_TLD PRIMARY KEY (TLD)
);

CREATE TABLE DOMINIO (
   NOMBRE_DOMINIO VARCHAR(253) NOT NULL,
   TLD VARCHAR(63) NOT NULL,
   CONSTRAINT PK_DOMINIO PRIMARY KEY (NOMBRE_DOMINIO, TLD),
   CONSTRAINT FK_DOMINIO_TLD FOREIGN KEY (TLD) REFERENCES TLD(TLD)
);

ALTER TABLE DOMINIO
ADD COLUMN ESTADO_DOMINIO estado_dominio_enum;

ALTER TABLE DOMINIO
ALTER COLUMN ESTADO_DOMINIO SET DEFAULT NULL;

CREATE TABLE CLIENTE_DIRECTO (
   ID_CLIENTE SERIAL NOT NULL,
   ID_PLAN INT NULL,
   NOMBRE_CLIENTE VARCHAR(50) NOT NULL,
   APELLIDO_CLIENTE VARCHAR(50) NOT NULL,
   TELEFONO VARCHAR(20) NOT NULL,
   FECHA_NACIMIENTO_CLIENTE DATE NULL,
   CONSTRAINT PK_CLIENTE_DIRECTO PRIMARY KEY (ID_CLIENTE),
   CONSTRAINT FK_CLIENTE_PLAN FOREIGN KEY (ID_PLAN) REFERENCES PLAN(ID_PLAN)
);

CREATE TABLE DISTRIBUIDOR (
   ID_DISTRIBUIDOR SERIAL,
   NOMBRE_TIPO_DOC VARCHAR(20) NOT NULL,
   NUMERO_DOC_EMPRESA VARCHAR(20) NOT NULL,
   NOMBRE_EMPRESA VARCHAR(255) NOT NULL,
   DIRECCION_EMPRESA VARCHAR(255) NOT NULL,
   CONSTRAINT PK_DISTRIBUIDOR PRIMARY KEY (ID_DISTRIBUIDOR),
   CONSTRAINT FK_DISTRIBUIDOR_TDOC FOREIGN KEY (NOMBRE_TIPO_DOC) REFERENCES TIPO_DOCUMENTO_EMP(NOMBRE_TIPO_DOC)
);

CREATE TABLE USUARIO (
   ID_USUARIO SERIAL PRIMARY KEY,
   ID_CLIENTE INT NULL,
   ID_ADMIN INT NULL,
   ID_EMPLEADO INT NULL,
   ID_DISTRIBUIDOR INT NULL,
   CORREO_USUARIO VARCHAR(150) NOT NULL,
   CONTRASENA VARCHAR(150) NOT NULL,
   ROL rol_usuario_enum NOT NULL,
   ESTADO estado_usuario NOT NULL,
   CONSTRAINT FK_USUARIO_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE_DIRECTO(ID_CLIENTE),
   CONSTRAINT FK_USUARIO_ADMIN FOREIGN KEY (ID_ADMIN) REFERENCES ADMINISTRADOR(ID_ADMIN),
   CONSTRAINT FK_USUARIO_EMPLEADO FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO),
   CONSTRAINT FK_USUARIO_DISTRIBUIDOR FOREIGN KEY (ID_DISTRIBUIDOR) REFERENCES DISTRIBUIDOR(ID_DISTRIBUIDOR)
);

CREATE TABLE SOLICITUD_DOM_CLIENTE (
   ID_CLIENTE INT NOT NULL,
   NOMBRE_DOMINIO VARCHAR(253) NOT NULL,
   TLD VARCHAR(63) NOT NULL,
   ID_ADMIN INT NULL,
   ID_REGISTRADOR INT NULL,
   FECHA_SOLICITUD DATE NOT NULL,
   ESTADO_SOLICITUD estado_solicitud_enum NOT NULL,
   FECHA_REVISION DATE NULL,
   FECHA_ENVIO DATE NULL,
   CONSTRAINT PK_SOLICITUD_DOM_CLIENTE PRIMARY KEY (ID_CLIENTE, NOMBRE_DOMINIO, TLD, FECHA_SOLICITUD),
   CONSTRAINT FK_SOL_CLIENTE_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE_DIRECTO(ID_CLIENTE),
   CONSTRAINT FK_SOL_CLIENTE_DOM FOREIGN KEY (NOMBRE_DOMINIO, TLD) REFERENCES DOMINIO(NOMBRE_DOMINIO, TLD),
   CONSTRAINT FK_SOL_CLIENTE_ADMIN FOREIGN KEY (ID_ADMIN) REFERENCES ADMINISTRADOR(ID_ADMIN),
   CONSTRAINT FK_SOL_CLIENTE_REG FOREIGN KEY (ID_REGISTRADOR) REFERENCES REGISTRADOR(ID_REGISTRADOR)
);

CREATE TABLE SOLICITUD_DOM_DISTRIBUIDOR (
   ID_DISTRIBUIDOR INT NOT NULL,
   NOMBRE_DOMINIO VARCHAR(253) NOT NULL,
   TLD VARCHAR(63) NOT NULL,
   FECHA_SOLICITUD DATE NOT NULL,
   ID_ADMIN INT NULL,
   ID_REGISTRADOR INT NULL,
   ESTADO_SOLICITUD estado_solicitud_enum NOT NULL,
   FECHA_REVISION DATE NULL,
   FECHA_ENVIO DATE NULL,
   CONSTRAINT PK_SOLICITUD_DOM_DISTRIBUIDOR PRIMARY KEY (
      ID_DISTRIBUIDOR, NOMBRE_DOMINIO, TLD, FECHA_SOLICITUD
   ),
   CONSTRAINT FK_SOL_DD_DIST FOREIGN KEY (ID_DISTRIBUIDOR) REFERENCES DISTRIBUIDOR(ID_DISTRIBUIDOR),
   CONSTRAINT FK_SOL_DD_DOM FOREIGN KEY (NOMBRE_DOMINIO, TLD) REFERENCES DOMINIO(NOMBRE_DOMINIO, TLD),
   CONSTRAINT FK_SOL_DD_ADMIN FOREIGN KEY (ID_ADMIN) REFERENCES ADMINISTRADOR(ID_ADMIN),
   CONSTRAINT FK_SOL_DD_REG FOREIGN KEY (ID_REGISTRADOR) REFERENCES REGISTRADOR(ID_REGISTRADOR)
);

CREATE TABLE TICKET (
   ID_TICKET VARCHAR(100) NOT NULL,
   ID_DISTRIBUIDOR INT NULL,
   ID_CLIENTE INT NULL,
   ID_EMPLEADO INT NULL,
   ASUNTO VARCHAR(100) NOT NULL,
   DESCRIPCION TEXT NULL,
   PRIORIDAD prioridad_enum NULL,
   ESTADO estado_ticket_enum NOT NULL,
   CONSTRAINT PK_TICKET PRIMARY KEY (ID_TICKET),
   CONSTRAINT FK_TICKET_DISTRIBUIDOR FOREIGN KEY (ID_DISTRIBUIDOR) REFERENCES DISTRIBUIDOR(ID_DISTRIBUIDOR),
   CONSTRAINT FK_TICKET_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE_DIRECTO(ID_CLIENTE),
   CONSTRAINT FK_TICKET_EMPLEADO FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO)
);

CREATE TABLE SOLUCION (
   ID_TICKET VARCHAR(100) NOT NULL,
   ID_EMPLEADO INT NOT NULL,
   CONSTRAINT PK_SOLUCION PRIMARY KEY (ID_TICKET, ID_EMPLEADO),
   CONSTRAINT FK_SOLUCION_TICKET FOREIGN KEY (ID_TICKET) REFERENCES TICKET(ID_TICKET),
   CONSTRAINT FK_SOLUCION_EMPLEADO FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO)
);
